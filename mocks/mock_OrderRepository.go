// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/service/db/main.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	db "github.com/jeraldyik/crypto_dca_go/cmd/service/db"
	supabase "github.com/supabase-community/supabase-go"
)

// MockOrderRepository is a mock of OrderRepository interface.
type MockOrderRepository struct {
	ctrl     *gomock.Controller
	recorder *MockOrderRepositoryMockRecorder
}

// MockOrderRepositoryMockRecorder is the mock recorder for MockOrderRepository.
type MockOrderRepositoryMockRecorder struct {
	mock *MockOrderRepository
}

// NewMockOrderRepository creates a new mock instance.
func NewMockOrderRepository(ctrl *gomock.Controller) *MockOrderRepository {
	mock := &MockOrderRepository{ctrl: ctrl}
	mock.recorder = &MockOrderRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOrderRepository) EXPECT() *MockOrderRepositoryMockRecorder {
	return m.recorder
}

// BulkInsert mocks base method.
func (m *MockOrderRepository) BulkInsert(rows []*db.Order) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkInsert", rows)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkInsert indicates an expected call of BulkInsert.
func (mr *MockOrderRepositoryMockRecorder) BulkInsert(rows interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkInsert", reflect.TypeOf((*MockOrderRepository)(nil).BulkInsert), rows)
}

// GetDB mocks base method.
func (m *MockOrderRepository) GetDB() *supabase.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDB")
	ret0, _ := ret[0].(*supabase.Client)
	return ret0
}

// GetDB indicates an expected call of GetDB.
func (mr *MockOrderRepositoryMockRecorder) GetDB() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDB", reflect.TypeOf((*MockOrderRepository)(nil).GetDB))
}
